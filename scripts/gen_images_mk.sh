#!/bin/sh

set -eu

FILES=
IMAGES=
for df in $(find * -type f -name Dockerfile); do
	name="docker-$(echo ${df%/*} | tr '/' '-')"

	FILES="${FILES:+$FILES
}$name:$df"
	IMAGES="${IMAGES:+$IMAGES
}$name"
done

# sort
IMAGES="$(echo "$IMAGES" | sort -V)"
FILES="$(echo "$FILES" | sort -V)"

image_files() {
	local d="$1" df="$2"
	shift 2

	(
	for x; do
		echo "$x"
	done

	echo "$df"

	find "$d" ! -type d | while read x; do
		if [ "$x" != "$df.in" -a "$x" != "$df" ]; then
			echo "$x"
		fi
	done
	) | sort -uV | tr '\n' '|' |
                sed -e 's,|$,,' -e 's,|, \\\n\t,g'
}

# generate list of managed images
cat <<EOT
# generated by $0
#
IMAGES =$(echo "$IMAGES" | sed -e 's:^:|\t$(PREFIX):' | tr -d '\n' | sed -e 's/|/ \\\n/g')
SENTINELS =$(echo "$IMAGES" | sed -e 's:^:|\t$(B)/.:' | tr -d '\n' | sed -e 's/|/ \\\n/g')
PUSHERS =$(echo "$IMAGES" | sed -e 's:^:|\tpush-:' | tr -d '\n' | sed -e 's/|/ \\\n/g')
EOT

for np in $FILES; do
	img="${np%:*}"
	df="${np#*:}"
	d="${df%/*}"

	from0=$(grep "^FROM" "$df" | head -n1 | sed -e 's/^FROM[ \t]\+//' -e 's/:.*//')
	from=
	for x in $IMAGES; do
		case "$from0" in
		*$x) from="$x" ;;
		esac

		[ -z "$from" ] || break
	done
	cat <<EOT

# $df
#
.PHONY: \$(PREFIX)$img
\$(PREFIX)$img: \$(B)/.$img

.PHONY: push-$img
push-$img: \$(B)/.$img

\$(B)/.$img: \\
	$(image_files "$d" "$df" ${from:+"\$(B)/.$from"})
\$(B)/.$img: NAME=$img
\$(B)/.$img: DIR=$d
EOT
done
